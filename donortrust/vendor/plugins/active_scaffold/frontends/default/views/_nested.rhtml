<h4>&nbsp;</h4>
<%
  # This assumes that the association is included as a column in the active_scaffold_config.columns collection
  associated_columns = []
  associated_columns = params[:associations].split(" ") unless params[:associations].nil?
  unless associated_columns.empty?
    parent_id = params[:id]
    associated_columns.each do | column_name |
      column = active_scaffold_config.columns[column_name]
      association = column.association
      if column.through_association?
        constraints = {
          association.source_reflection.reverse => {
            association.through_reflection.reverse => parent_id
          }
        }
      else
        constraints = { association.reverse => parent_id }
      end
      begin
        controller = active_scaffold_controller_for(association.klass)
      rescue ActiveScaffold::ControllerNotFound => error %>
        <%= "#{error.class} - #{error.message}"%>
<%    else %>
    <%= render :active_scaffold => controller.controller_path,
               :constraints => constraints,
               :label => as_("%s for %s", active_scaffold_config_for(association.klass).label, format_column(@record.to_label)),
               :params => {:nested => true, :parent_column => column_name, :parent_model => association.active_record} %>
<%    end
    end
  end
%>
